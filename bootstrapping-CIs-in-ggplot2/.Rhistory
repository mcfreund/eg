het.boot  = vector("numeric", length = n.sims),
hom.boot  = vector("numeric", length = n.sims)
)
for (ii in seq_len(n.sims)) {
het <- rnorm(n, sd = x / 100) ## generate variable that is heteroskedastic and uncorrelated with x
hom <- rnorm(n, sd = mean(x) / 100)  ## generate variable z which is homoskedastic and uncorrelated with x
p[ii, c("het.param", "hom.param")] <- c(cor.test(x, het)$p.value, cor.test(x, hom)$p.value)
p[ii, c("het.boot", "hom.boot")] <- c(boot.bivar(x, het)["p"], boot.bivar(x, hom)["p"])
}
par(mfrow = c(1, 2), mar = c(2, 2, 2, 2))
plot(x, het, main = "x ~ het")
plot(x, hom, main = "x ~ hom")
cor(x, het)
cor(x, hom)
colMeans(apply(p, 2, function(x) x < 0.05)) * 100  ## false positive rate for each statistic
par(mfrow = c(2, 2), mar = c(2, 2, 2, 2))
hist(p$het.param, main = "heteroskedastic, parametric")
hist(p$hom.param, main = "homoskedastic, parametric")
boot.bivar
1E4
n <- 100  ## n datapoints
n.sims <- 5000
n.sims
n <- 1000  ## n datapoints
n.sims <- 5000
x <- 1:n  ## values from some measure
p <- data.frame(
het.param = vector("numeric", length = n.sims),
hom.param = vector("numeric", length = n.sims),
het.boot  = vector("numeric", length = n.sims),
hom.boot  = vector("numeric", length = n.sims)
)
for (ii in seq_len(n.sims)) {
het <- rnorm(n, sd = x) ## generate variable that is heteroskedastic and uncorrelated with x
hom <- rnorm(n, sd = mean(x))  ## generate variable z which is homoskedastic and uncorrelated with x
p[ii, c("het.param", "hom.param")] <- c(cor.test(x, het)$p.value, cor.test(x, hom)$p.value)
p[ii, c("het.boot", "hom.boot")] <- c(
boot.bivar(x, het)["p"],
boot.bivar(x, hom)["p"]
)
}
boot.bivar <- function(x, y, n.resamples = 1000) {
if (length(x) != length(y)) stop("x and y not same length")
resample.matrix <- matrix(
sample.int(length(x), length(x) * n.resamples, replace = TRUE),
ncol = n.resamples
)
resamples <- apply(resample.matrix, 2, function(s) cor(x[s], y[s]))
## get p-value (alpha = 0.05, 2-tailed):
prop.less.0 <- mean(resamples < 0)
p <- 2 * min(prop.less.0, 1 - prop.less.0)
## get CI (95%):
lb <- (1 / 20 * n.resamples) / 2
ub <- n.resamples - lb
resamples <- sort(resamples)
return(c(p = p, ci95l = resamples[lb], ci95h = resamples[ub]))
}
n <- 1000  ## n datapoints
n.sims <- 5000
x <- 1:n  ## values from some measure
p <- data.frame(
het.param = vector("numeric", length = n.sims),
hom.param = vector("numeric", length = n.sims),
het.boot  = vector("numeric", length = n.sims),
hom.boot  = vector("numeric", length = n.sims)
)
for (ii in seq_len(n.sims)) {
het <- rnorm(n, sd = x) ## generate variable that is heteroskedastic and uncorrelated with x
hom <- rnorm(n, sd = mean(x))  ## generate variable z which is homoskedastic and uncorrelated with x
p[ii, c("het.param", "hom.param")] <- c(cor.test(x, het)$p.value, cor.test(x, hom)$p.value)
p[ii, c("het.boot", "hom.boot")] <- c(
boot.bivar(x, het)["p"],
boot.bivar(x, hom)["p"]
)
}
n <- 1000  ## n datapoints
n.sims <- 1000
x <- 1:n  ## values from some measure
p <- data.frame(
het.param = vector("numeric", length = n.sims),
hom.param = vector("numeric", length = n.sims),
het.boot  = vector("numeric", length = n.sims),
hom.boot  = vector("numeric", length = n.sims)
)
for (ii in seq_len(n.sims)) {
het <- rnorm(n, sd = x) ## generate variable that is heteroskedastic and uncorrelated with x
hom <- rnorm(n, sd = mean(x))  ## generate variable z which is homoskedastic and uncorrelated with x
p[ii, c("het.param", "hom.param")] <- c(cor.test(x, het)$p.value, cor.test(x, hom)$p.value)
p[ii, c("het.boot", "hom.boot")] <- c(
boot.bivar(x, het)["p"],
boot.bivar(x, hom)["p"]
)
}
n <- 1000  ## n datapoints
n.sims <- 1000
x <- 1:n  ## values from some measure
p <- data.frame(
het.param = vector("numeric", length = n.sims),
hom.param = vector("numeric", length = n.sims),
het.boot  = vector("numeric", length = n.sims),
hom.boot  = vector("numeric", length = n.sims)
)
for (ii in seq_len(n.sims)) {
het <- rnorm(n, sd = x) ## generate variable that is heteroskedastic and uncorrelated with x
hom <- rnorm(n, sd = mean(x))  ## generate variable z which is homoskedastic and uncorrelated with x
p[ii, c("het.param", "hom.param")] <- c(cor.test(x, het)$p.value, cor.test(x, hom)$p.value)
# p[ii, c("het.boot", "hom.boot")] <- c(
#   boot.bivar(x, het)["p"],
#   boot.bivar(x, hom)["p"]
# )
}
par(mfrow = c(1, 2), mar = c(2, 2, 2, 2))
plot(x, het, main = "x ~ het")
plot(x, hom, main = "x ~ hom")
cor(x, het)
cor(x, hom)
colMeans(apply(p, 2, function(x) x < 0.05)) * 100  ## false positive rate for each statistic
par(mfrow = c(2, 2), mar = c(2, 2, 2, 2))
hist(p$het.param, main = "heteroskedastic, parametric")
hist(p$hom.param, main = "homoskedastic, parametric")
hist(p$het.boot, main = "heteroskedastic, bootstrapped")
hist(p$hom.boot, main = "homoskedastic, bootstrapped")
n <- 1000  ## n datapoints
n.sims <- 1000
x <- 1:n  ## values from some measure
p <- data.frame(
het.param = vector("numeric", length = n.sims),
hom.param = vector("numeric", length = n.sims),
het.boot  = vector("numeric", length = n.sims),
hom.boot  = vector("numeric", length = n.sims)
)
for (ii in seq_len(n.sims)) {
het <- rnorm(n, sd = x * 100) ## generate variable that is heteroskedastic and uncorrelated with x
hom <- rnorm(n, sd = mean(x))  ## generate variable z which is homoskedastic and uncorrelated with x
p[ii, c("het.param", "hom.param")] <- c(cor.test(x, het)$p.value, cor.test(x, hom)$p.value)
# p[ii, c("het.boot", "hom.boot")] <- c(
#   boot.bivar(x, het)["p"],
#   boot.bivar(x, hom)["p"]
# )
}
colMeans(apply(p, 2, function(x) x < 0.05)) * 100  ## false positive rate for each statistic
par(mfrow = c(2, 2), mar = c(2, 2, 2, 2))
hist(p$het.param, main = "heteroskedastic, parametric")
hist(p$hom.param, main = "homoskedastic, parametric")
hist(p$het.boot, main = "heteroskedastic, bootstrapped")
hist(p$hom.boot, main = "homoskedastic, bootstrapped")
n <- 1000  ## n datapoints
n.sims <- 1000
x <- 1:n  ## values from some measure
p <- data.frame(
het.param = vector("numeric", length = n.sims),
hom.param = vector("numeric", length = n.sims),
het.boot  = vector("numeric", length = n.sims),
hom.boot  = vector("numeric", length = n.sims)
)
for (ii in seq_len(n.sims)) {
het <- rnorm(n, sd = x * 100) ## generate variable that is heteroskedastic and uncorrelated with x
hom <- rnorm(n, sd = mean(x))  ## generate variable z which is homoskedastic and uncorrelated with x
p[ii, c("het.param", "hom.param")] <- c(cor.test(x, het)$p.value, cor.test(x, hom)$p.value)
# p[ii, c("het.boot", "hom.boot")] <- c(
#   boot.bivar(x, het)["p"],
#   boot.bivar(x, hom)["p"]
# )
}
colMeans(apply(p, 2, function(x) x < 0.05)) * 100  ## false positive rate for each statistic
par(mfrow = c(2, 2), mar = c(2, 2, 2, 2))
hist(p$het.param, main = "heteroskedastic, parametric")
hist(p$hom.param, main = "homoskedastic, parametric")
hist(p$het.boot, main = "heteroskedastic, bootstrapped")
hist(p$hom.boot, main = "homoskedastic, bootstrapped")
n <- 1000  ## n datapoints
n.sims <- 1000
x <- 1:n  ## values from some measure
p <- data.frame(
het.param = vector("numeric", length = n.sims),
hom.param = vector("numeric", length = n.sims),
het.boot  = vector("numeric", length = n.sims),
hom.boot  = vector("numeric", length = n.sims)
)
for (ii in seq_len(n.sims)) {
het <- rnorm(n, sd = x * 0.1) ## generate variable that is heteroskedastic and uncorrelated with x
hom <- rnorm(n, sd = mean(x))  ## generate variable z which is homoskedastic and uncorrelated with x
p[ii, c("het.param", "hom.param")] <- c(cor.test(x, het)$p.value, cor.test(x, hom)$p.value)
# p[ii, c("het.boot", "hom.boot")] <- c(
#   boot.bivar(x, het)["p"],
#   boot.bivar(x, hom)["p"]
# )
}
par(mfrow = c(1, 2), mar = c(2, 2, 2, 2))
plot(x, het, main = "x ~ het")
plot(x, hom, main = "x ~ hom")
cor(x, het)
cor(x, hom)
colMeans(apply(p, 2, function(x) x < 0.05)) * 100  ## false positive rate for each statistic
par(mfrow = c(2, 2), mar = c(2, 2, 2, 2))
hist(p$het.param, main = "heteroskedastic, parametric")
hist(p$hom.param, main = "homoskedastic, parametric")
hist(p$het.boot, main = "heteroskedastic, bootstrapped")
hist(p$hom.boot, main = "homoskedastic, bootstrapped")
n <- 1000  ## n datapoints
n.sims <- 40
x <- 1:n  ## values from some measure
p <- data.frame(
het.param = vector("numeric", length = n.sims),
hom.param = vector("numeric", length = n.sims),
het.boot  = vector("numeric", length = n.sims),
hom.boot  = vector("numeric", length = n.sims)
)
for (ii in seq_len(n.sims)) {
het <- rnorm(n, sd = x) ## generate variable that is heteroskedastic and uncorrelated with x
hom <- rnorm(n, sd = mean(x))  ## generate variable z which is homoskedastic and uncorrelated with x
p[ii, c("het.param", "hom.param")] <- c(cor.test(x, het)$p.value, cor.test(x, hom)$p.value)
# p[ii, c("het.boot", "hom.boot")] <- c(
#   boot.bivar(x, het)["p"],
#   boot.bivar(x, hom)["p"]
# )
}
colMeans(apply(p, 2, function(x) x < 0.05)) * 100  ## false positive rate for each statistic
par(mfrow = c(2, 2), mar = c(2, 2, 2, 2))
hist(p$het.param, main = "heteroskedastic, parametric")
hist(p$hom.param, main = "homoskedastic, parametric")
hist(p$het.boot, main = "heteroskedastic, bootstrapped")
hist(p$hom.boot, main = "homoskedastic, bootstrapped")
n <- 50  ## n datapoints
n.sims <- 1000
x <- 1:n  ## values from some measure
p <- data.frame(
het.param = vector("numeric", length = n.sims),
hom.param = vector("numeric", length = n.sims),
het.boot  = vector("numeric", length = n.sims),
hom.boot  = vector("numeric", length = n.sims)
)
for (ii in seq_len(n.sims)) {
het <- rnorm(n, sd = x) ## generate variable that is heteroskedastic and uncorrelated with x
hom <- rnorm(n, sd = mean(x))  ## generate variable z which is homoskedastic and uncorrelated with x
p[ii, c("het.param", "hom.param")] <- c(cor.test(x, het)$p.value, cor.test(x, hom)$p.value)
# p[ii, c("het.boot", "hom.boot")] <- c(
#   boot.bivar(x, het)["p"],
#   boot.bivar(x, hom)["p"]
# )
}
par(mfrow = c(1, 2), mar = c(2, 2, 2, 2))
plot(x, het, main = "x ~ het")
plot(x, hom, main = "x ~ hom")
cor(x, het)
cor(x, hom)
colMeans(apply(p, 2, function(x) x < 0.05)) * 100  ## false positive rate for each statistic
par(mfrow = c(2, 2), mar = c(2, 2, 2, 2))
hist(p$het.param, main = "heteroskedastic, parametric")
hist(p$hom.param, main = "homoskedastic, parametric")
hist(p$het.boot, main = "heteroskedastic, bootstrapped")
hist(p$hom.boot, main = "homoskedastic, bootstrapped")
n <- 50  ## n datapoints
n.sims <- 1000
x <- 1:n  ## values from some measure
p <- data.frame(
het.param = vector("numeric", length = n.sims),
hom.param = vector("numeric", length = n.sims),
het.boot  = vector("numeric", length = n.sims),
hom.boot  = vector("numeric", length = n.sims)
)
for (ii in seq_len(n.sims)) {
het <- rnorm(n, sd = x) ## generate variable that is heteroskedastic and uncorrelated with x
hom <- rnorm(n, sd = mean(x))  ## generate variable z which is homoskedastic and uncorrelated with x
p[ii, c("het.param", "hom.param")] <- c(cor.test(x, het)$p.value, cor.test(x, hom)$p.value)
# p[ii, c("het.boot", "hom.boot")] <- c(
#   boot.bivar(x, het)["p"],
#   boot.bivar(x, hom)["p"]
# )
}
n <- 100  ## n datapoints
n.sims <- 1000
x <- 1:n  ## values from some measure
p <- data.frame(
het.param = vector("numeric", length = n.sims),
hom.param = vector("numeric", length = n.sims),
het.boot  = vector("numeric", length = n.sims),
hom.boot  = vector("numeric", length = n.sims)
)
for (ii in seq_len(n.sims)) {
het <- rnorm(n, sd = x) ## generate variable that is heteroskedastic and uncorrelated with x
hom <- rnorm(n, sd = mean(x))  ## generate variable z which is homoskedastic and uncorrelated with x
p[ii, c("het.param", "hom.param")] <- c(cor.test(x, het)$p.value, cor.test(x, hom)$p.value)
# p[ii, c("het.boot", "hom.boot")] <- c(
#   boot.bivar(x, het)["p"],
#   boot.bivar(x, hom)["p"]
# )
}
n <- 100  ## n datapoints
n.sims <- 10000
x <- 1:n  ## values from some measure
p <- data.frame(
het.param = vector("numeric", length = n.sims),
hom.param = vector("numeric", length = n.sims),
het.boot  = vector("numeric", length = n.sims),
hom.boot  = vector("numeric", length = n.sims)
)
for (ii in seq_len(n.sims)) {
het <- rnorm(n, sd = x) ## generate variable that is heteroskedastic and uncorrelated with x
hom <- rnorm(n, sd = mean(x))  ## generate variable z which is homoskedastic and uncorrelated with x
p[ii, c("het.param", "hom.param")] <- c(cor.test(x, het)$p.value, cor.test(x, hom)$p.value)
# p[ii, c("het.boot", "hom.boot")] <- c(
#   boot.bivar(x, het)["p"],
#   boot.bivar(x, hom)["p"]
# )
}
par(mfrow = c(1, 2), mar = c(2, 2, 2, 2))
plot(x, het, main = "x ~ het")
plot(x, hom, main = "x ~ hom")
cor(x, het)
cor(x, hom)
colMeans(apply(p, 2, function(x) x < 0.05)) * 100  ## false positive rate for each statistic
par(mfrow = c(2, 2), mar = c(2, 2, 2, 2))
hist(p$het.param, main = "heteroskedastic, parametric")
hist(p$hom.param, main = "homoskedastic, parametric")
hist(p$het.boot, main = "heteroskedastic, bootstrapped")
hist(p$hom.boot, main = "homoskedastic, bootstrapped")
n <- 100  ## n datapoints
n.sims <- 100
x <- 1:n  ## values from some measure
p <- data.frame(
het.param = vector("numeric", length = n.sims),
hom.param = vector("numeric", length = n.sims),
het.boot  = vector("numeric", length = n.sims),
hom.boot  = vector("numeric", length = n.sims)
)
for (ii in seq_len(n.sims)) {
het <- rnorm(n, sd = x) ## generate variable that is heteroskedastic and uncorrelated with x
hom <- rnorm(n, sd = mean(x))  ## generate variable z which is homoskedastic and uncorrelated with x
p[ii, c("het.param", "hom.param")] <- c(cor.test(x, het)$p.value, cor.test(x, hom)$p.value)
p[ii, c("het.boot", "hom.boot")] <- c(
boot.bivar(x, het)["p"],
boot.bivar(x, hom)["p"]
)
}
par(mfrow = c(1, 2), mar = c(2, 2, 2, 2))
plot(x, het, main = "x ~ het")
plot(x, hom, main = "x ~ hom")
cor(x, het)
cor(x, hom)
colMeans(apply(p, 2, function(x) x < 0.05)) * 100  ## false positive rate for each statistic
par(mfrow = c(2, 2), mar = c(2, 2, 2, 2))
hist(p$het.param, main = "heteroskedastic, parametric")
hist(p$hom.param, main = "homoskedastic, parametric")
hist(p$het.boot, main = "heteroskedastic, bootstrapped")
hist(p$hom.boot, main = "homoskedastic, bootstrapped")
p
apply(p, 2, function(x) x < 0.05)
colMeans(apply(p, 2, function(x) x < 0.05))
colMeans(apply(p, 2, function(x) x < 0.05)) * 100  ## false positive rate for each statistic
n <- 100  ## n datapoints
n.sims <- 1000
x <- 1:n  ## values from some measure
p <- data.frame(
het.param = vector("numeric", length = n.sims),
hom.param = vector("numeric", length = n.sims),
het.boot  = vector("numeric", length = n.sims),
hom.boot  = vector("numeric", length = n.sims)
)
for (ii in seq_len(n.sims)) {
het <- rnorm(n, sd = mean(x)) ## generate variable that is heteroskedastic and uncorrelated with x
hom <- rnorm(n, sd = mean(x))  ## generate variable z which is homoskedastic and uncorrelated with x
p[ii, c("het.param", "hom.param")] <- c(cor.test(x, het)$p.value, cor.test(x, hom)$p.value)
p[ii, c("het.boot", "hom.boot")] <- c(
boot.bivar(x, het)["p"],
boot.bivar(x, hom)["p"]
)
}
par(mfrow = c(1, 2), mar = c(2, 2, 2, 2))
plot(x, het, main = "x ~ het")
plot(x, hom, main = "x ~ hom")
cor(x, het)
cor(x, hom)
colMeans(apply(p, 2, function(x) x < 0.05)) * 100  ## false positive rate for each statistic
par(mfrow = c(2, 2), mar = c(2, 2, 2, 2))
hist(p$het.param, main = "heteroskedastic, parametric")
hist(p$hom.param, main = "homoskedastic, parametric")
hist(p$het.boot, main = "heteroskedastic, bootstrapped")
hist(p$hom.boot, main = "homoskedastic, bootstrapped")
matrix(1:1E6, nrow = 1E3)
matrix(1:1E6^2, nrow = 1E3)
matrix(1:1E6 * 100, nrow = 100)
n <- 100  ## n datapoints
n.sims <- 1000
x <- 1:n  ## values from some measure
p <- data.frame(
het.param = vector("numeric", length = n.sims),
hom.param = vector("numeric", length = n.sims),
het.boot  = vector("numeric", length = n.sims),
hom.boot  = vector("numeric", length = n.sims)
)
for (ii in seq_len(n.sims)) {
het <- rnorm(n, sd = mean(x)) ## generate variable that is heteroskedastic and uncorrelated with x
hom <- rnorm(n, sd = mean(x))  ## generate variable z which is homoskedastic and uncorrelated with x
p[ii, c("het.param", "hom.param")] <- c(cor.test(x, het)$p.value, cor.test(x, hom)$p.value)
# p[ii, c("het.boot", "hom.boot")] <- c(
#   boot.bivar(x, het)["p"],
#   boot.bivar(x, hom)["p"]
# )
}
par(mfrow = c(1, 2), mar = c(2, 2, 2, 2))
plot(x, het, main = "x ~ het")
plot(x, hom, main = "x ~ hom")
cor(x, het)
cor(x, hom)
colMeans(apply(p, 2, function(x) x < 0.05)) * 100  ## false positive rate for each statistic
par(mfrow = c(2, 2), mar = c(2, 2, 2, 2))
hist(p$het.param, main = "heteroskedastic, parametric")
hist(p$hom.param, main = "homoskedastic, parametric")
hist(p$het.boot, main = "heteroskedastic, bootstrapped")
hist(p$hom.boot, main = "homoskedastic, bootstrapped")
n <- 100  ## n datapoints
n.sims <- 5000
x <- 1:n  ## values from some measure
p <- data.frame(
het.param = vector("numeric", length = n.sims),
hom.param = vector("numeric", length = n.sims),
het.boot  = vector("numeric", length = n.sims),
hom.boot  = vector("numeric", length = n.sims)
)
for (ii in seq_len(n.sims)) {
het <- rnorm(n, sd = mean(x)) ## generate variable that is heteroskedastic and uncorrelated with x
hom <- rnorm(n, sd = mean(x))  ## generate variable z which is homoskedastic and uncorrelated with x
p[ii, c("het.param", "hom.param")] <- c(cor.test(x, het)$p.value, cor.test(x, hom)$p.value)
# p[ii, c("het.boot", "hom.boot")] <- c(
#   boot.bivar(x, het)["p"],
#   boot.bivar(x, hom)["p"]
# )
}
par(mfrow = c(1, 2), mar = c(2, 2, 2, 2))
plot(x, het, main = "x ~ het")
plot(x, hom, main = "x ~ hom")
cor(x, het)
cor(x, hom)
colMeans(apply(p, 2, function(x) x < 0.05)) * 100  ## false positive rate for each statistic
par(mfrow = c(2, 2), mar = c(2, 2, 2, 2))
hist(p$het.param, main = "heteroskedastic, parametric")
hist(p$hom.param, main = "homoskedastic, parametric")
hist(p$het.boot, main = "heteroskedastic, bootstrapped")
hist(p$hom.boot, main = "homoskedastic, bootstrapped")
n <- 100  ## n datapoints
n.sims <- 10000
x <- 1:n  ## values from some measure
p <- data.frame(
het.param = vector("numeric", length = n.sims),
hom.param = vector("numeric", length = n.sims),
het.boot  = vector("numeric", length = n.sims),
hom.boot  = vector("numeric", length = n.sims)
)
for (ii in seq_len(n.sims)) {
het <- rnorm(n, sd = mean(x)) ## generate variable that is heteroskedastic and uncorrelated with x
hom <- rnorm(n, sd = mean(x))  ## generate variable z which is homoskedastic and uncorrelated with x
p[ii, c("het.param", "hom.param")] <- c(cor.test(x, het)$p.value, cor.test(x, hom)$p.value)
# p[ii, c("het.boot", "hom.boot")] <- c(
#   boot.bivar(x, het)["p"],
#   boot.bivar(x, hom)["p"]
# )
}
par(mfrow = c(1, 2), mar = c(2, 2, 2, 2))
plot(x, het, main = "x ~ het")
plot(x, hom, main = "x ~ hom")
cor(x, het)
cor(x, hom)
colMeans(apply(p, 2, function(x) x < 0.05)) * 100  ## false positive rate for each statistic
par(mfrow = c(2, 2), mar = c(2, 2, 2, 2))
hist(p$het.param, main = "heteroskedastic, parametric")
hist(p$hom.param, main = "homoskedastic, parametric")
hist(p$het.boot, main = "heteroskedastic, bootstrapped")
hist(p$hom.boot, main = "homoskedastic, bootstrapped")
n <- 100  ## n datapoints
n.sims <- 10000
x <- 1:n  ## values from some measure
p <- data.frame(
het.param = vector("numeric", length = n.sims),
hom.param = vector("numeric", length = n.sims),
het.boot  = vector("numeric", length = n.sims),
hom.boot  = vector("numeric", length = n.sims)
)
for (ii in seq_len(n.sims)) {
het <- rnorm(n, sd = mean(x)) ## generate variable that is heteroskedastic and uncorrelated with x
hom <- rnorm(n, sd = mean(x))  ## generate variable z which is homoskedastic and uncorrelated with x
p[ii, c("het.param", "hom.param")] <- c(cor.test(x, het)$p.value, cor.test(x, hom)$p.value)
p[ii, c("het.boot", "hom.boot")] <- c(
boot.bivar(x, het, n.resamples = 100)["p"],
boot.bivar(x, hom, n.resamples = 100)["p"]
)
}
par(mfrow = c(1, 2), mar = c(2, 2, 2, 2))
plot(x, het, main = "x ~ het")
plot(x, hom, main = "x ~ hom")
cor(x, het)
cor(x, hom)
colMeans(apply(p, 2, function(x) x < 0.05)) * 100  ## false positive rate for each statistic
par(mfrow = c(2, 2), mar = c(2, 2, 2, 2))
hist(p$het.param, main = "heteroskedastic, parametric")
hist(p$hom.param, main = "homoskedastic, parametric")
hist(p$het.boot, main = "heteroskedastic, bootstrapped")
hist(p$hom.boot, main = "homoskedastic, bootstrapped")
p
library(foreach)
library(doParallel)
install.packages("doParallel")
library(doParallel)
x <- iris[which(iris[,5] != "setosa"), c(1,5)]
trials <- 10000
icount
icount(trials)
r <- foreach(icount(trials), .combine=cbind) %dopar% {
ind <- sample(100, 100, replace=TRUE)
result1 <- glm(x[ind,2]~x[ind,1], family=binomial(logit))
coefficients(result1)
}
